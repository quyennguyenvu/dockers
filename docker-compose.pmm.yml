networks:
  default:
    name: ${NETWORK_NAME}
    driver: bridge

services:
  percona:
    image: ${PERCONA_IMAGE}
    restart: unless-stopped
    container_name: percona
    ports:
      - ${PERCONA_PORT}:3306
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

  watchtower:
    image: ${WATCHTOWER_IMAGE}
    container_name: watchtower
    restart: unless-stopped
    volumes:
      - ${WATCHTOWER_PATH}:/var/run/docker.sock

  pmm-server:
    image: ${PMM_SERVER_IMAGE}
    hostname: pmm-server
    platform: "linux/amd64"
    container_name: pmm-server
    restart: always
    ports:
      - ${PMM_HTTP_PORT}:80
      - ${PMM_SERVER_PORT}:443
    volumes:
      - pmm-data:/srv
    environment:
      - DISABLE_TELEMETRY=0
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 5

  pmm-client-postgres:
    image: ${PMM_CLIENT_IMAGE}
    hostname: pmm-client-postgres
    platform: "linux/amd64"
    container_name: pmm-client-postgres
    depends_on:
      pmm-server:
        condition: service_healthy
    environment:
      PMM_AGENT_SERVER_ADDRESS: pmm-server
      PMM_AGENT_SERVER_USERNAME: admin
      PMM_AGENT_SERVER_PASSWORD: admin
      PMM_AGENT_SERVER_INSECURE_TLS: 1
      PMM_AGENT_CONFIG_FILE: config/pmm-agent.yaml
      PMM_AGENT_SETUP: 1
      PMM_AGENT_SETUP_FORCE: 1
      PMM_AGENT_PRERUN_SCRIPT: "pmm-admin status --wait=10s; pmm-admin add postgresql --username=postgres --password=password --host=postgres --port=5432 --query-source=pgstatmonitor"
